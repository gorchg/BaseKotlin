apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // Use experimental kapt implementation

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.youandjo.basekotlin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // Main source set is Kotlin!
        main.java.srcDirs += 'src/main/kotlin'

        // Unit tests live in src/unitTest.
        test.java.srcDir 'src/unitTests/kotlin'

        // Integration tests live in src/integrationTest.
        test.java.srcDir 'src/integrationTests/kotlin'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        testDebug.java.srcDir 'src/debugUnitTests/kotlin'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        testRelease.java.srcDir 'src/releaseUnitTests/kotlin'

        // Functional tests live in src/functionalTests.
        androidTest.java.srcDir 'src/functionalTests/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    testCompile 'junit:junit:4.12'

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
